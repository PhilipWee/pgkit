import * as fsSyncer from 'fs-syncer'
import {test, beforeEach, expect, vi as jest} from 'vitest'
import * as typegen from '../src'
import {getPureHelper} from './helper'

export const {typegenOptions, logger, poolHelper: helper} = getPureHelper({__filename})

beforeEach(async () => {
  jest.resetAllMocks()

  await helper.setupDb()
  await helper.pool.query(helper.sql`
    create table test_table1(
      a int not null,
      b double precision
    );
  `)
})

test('statement with subquery', async () => {
  const syncer = fsSyncer.testFixture({
    expect,
    targetState: {
      'index.ts': `
        import {sql} from 'slonik'

        export default [
          sql\`
            select
              test_table1.b,
              (select a from test_table1 where a > 1 limit 1) as aa
            from test_table1
          \`,
          sql\`
            select
              test_table1.b,
              (select count(*) from test_table1) as num
            from test_table1
          \`,
        ]
      `,
    },
  })

  syncer.sync()

  await typegen.generate(typegenOptions(syncer.baseDir))

  expect(logger.warn).not.toHaveBeenCalled()
  expect(logger.error).not.toHaveBeenCalled()

  expect(syncer.yaml()).toMatchInlineSnapshot(`
    "---
    index.ts: |-
      import {sql} from 'slonik'

      export default [
        sql<queries.TestTable1>\`
          select
            test_table1.b,
            (select a from test_table1 where a > 1 limit 1) as aa
          from test_table1
        \`,
        sql<queries.TestTable1_b_num>\`
          select
            test_table1.b,
            (select count(*) from test_table1) as num
          from test_table1
        \`,
      ]

      export declare namespace queries {
        // Generated by @pgkit/typegen

        /** - query: \`select test_table1.b, (select a from test_table1 where a > 1 limit 1) as aa from test_table1\` */
        export interface TestTable1 {
          /** column: \`public.test_table1.b\`, regtype: \`double precision\` */
          b: number | null

          /**
           * From CTE subquery "subquery_1_for_column_aa", column source: public.test_table1.a
           *
           * column: \`✨.subquery_1_for_column_aa.aa\`, not null: \`true\`, regtype: \`integer\`
           */
          aa: number
        }

        /** - query: \`select test_table1.b, (select count(*) from test_table1) as num from test_table1\` */
        export interface TestTable1_b_num {
          /** column: \`public.test_table1.b\`, regtype: \`double precision\` */
          b: number | null

          /**
           * From CTE subquery "subquery_1_for_column_num"
           *
           * column: \`✨.subquery_1_for_column_num.num\`, not null: \`true\`, regtype: \`bigint\`
           */
          num: number
        }
      }
    "
  `)
})
